// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Superjack.MultiSites.Api.DataAccess;

namespace Superjack.MultiSites.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210822030612_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.Block", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BlockType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BlockType");

                    b.Property<bool>("CanHaveChildren")
                        .HasColumnType("bit")
                        .HasColumnName("CanHaveChildren");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateCreated");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateModified");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint")
                        .HasColumnName("ParentId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Uuid");

                    b.HasKey("Id");

                    b.ToTable("Blocks");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BlockType = "columnContainer",
                            CanHaveChildren = true,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 920, DateTimeKind.Local).AddTicks(8195),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 920, DateTimeKind.Local).AddTicks(8746),
                            ParentId = 0L,
                            Title = "Columns",
                            Uuid = new Guid("a5334025-82f8-4322-a662-bcea5ab62155")
                        },
                        new
                        {
                            Id = 2L,
                            BlockType = "button",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(608),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(630),
                            ParentId = 0L,
                            Title = "Button",
                            Uuid = new Guid("39530f11-ac8a-4896-8161-1e1fff4b4a11")
                        },
                        new
                        {
                            Id = 3L,
                            BlockType = "checkbox",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(637),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(641),
                            ParentId = 0L,
                            Title = "Checkbox",
                            Uuid = new Guid("dd487984-13e3-489f-b20c-8cca82236970")
                        },
                        new
                        {
                            Id = 4L,
                            BlockType = "checklist",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(647),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(652),
                            ParentId = 0L,
                            Title = "Checklist",
                            Uuid = new Guid("19494b2f-657e-4105-af09-2fb07b44c98c")
                        },
                        new
                        {
                            Id = 5L,
                            BlockType = "dataListGroup",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(658),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(662),
                            ParentId = 0L,
                            Title = "Data List Group",
                            Uuid = new Guid("5e0cb0a1-3f78-405d-9b92-3a3f4d44aaca")
                        },
                        new
                        {
                            Id = 6L,
                            BlockType = "datePicker",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(667),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(671),
                            ParentId = 0L,
                            Title = "Date Picker",
                            Uuid = new Guid("06cb0efa-75ed-4263-8cad-e98a609a3875")
                        },
                        new
                        {
                            Id = 7L,
                            BlockType = "divider",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(676),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(680),
                            ParentId = 0L,
                            Title = "Divider",
                            Uuid = new Guid("64c7c960-6c1d-47ba-9c34-e5d885e64442")
                        },
                        new
                        {
                            Id = 8L,
                            BlockType = "dropDown",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(702),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(706),
                            ParentId = 0L,
                            Title = "Drop-down",
                            Uuid = new Guid("14bfb1ce-3e88-4a6d-b417-82a667317ceb")
                        },
                        new
                        {
                            Id = 9L,
                            BlockType = "editableTable",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(712),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(716),
                            ParentId = 0L,
                            Title = "Editable Table",
                            Uuid = new Guid("12dee6e5-d108-47d2-b668-4aa74e660221")
                        },
                        new
                        {
                            Id = 10L,
                            BlockType = "fileUpload",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(722),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(725),
                            ParentId = 0L,
                            Title = "File Upload",
                            Uuid = new Guid("dd74ffe4-3789-4e94-b87d-f245510ea2bb")
                        },
                        new
                        {
                            Id = 11L,
                            BlockType = "heading",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(731),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(735),
                            ParentId = 0L,
                            Title = "heading",
                            Uuid = new Guid("19d12993-29b3-4d9e-adae-8cf11a3a59be")
                        },
                        new
                        {
                            Id = 12L,
                            BlockType = "subHeading",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(740),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(744),
                            ParentId = 0L,
                            Title = "Sub-heading",
                            Uuid = new Guid("5670114d-bb15-4d53-9c00-20503239b917")
                        },
                        new
                        {
                            Id = 13L,
                            BlockType = "listGroup",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(750),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(754),
                            ParentId = 0L,
                            Title = "List Group",
                            Uuid = new Guid("c269ac9b-1011-4e1a-b6df-d0237cb9b64b")
                        },
                        new
                        {
                            Id = 14L,
                            BlockType = "multiLineTextbox",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(759),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(763),
                            ParentId = 0L,
                            Title = "Multi-line Textbox",
                            Uuid = new Guid("dfd4b5a7-c45b-4316-be65-a3284dd5dab2")
                        },
                        new
                        {
                            Id = 15L,
                            BlockType = "radioGroup",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(768),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(772),
                            ParentId = 0L,
                            Title = "Radio Group",
                            Uuid = new Guid("fe713750-d1a2-402f-8592-9f821ce5b88a")
                        },
                        new
                        {
                            Id = 16L,
                            BlockType = "signature",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(782),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(786),
                            ParentId = 0L,
                            Title = "Signature",
                            Uuid = new Guid("3f9dfc63-080b-4ad6-9114-b02dea5f242a")
                        },
                        new
                        {
                            Id = 17L,
                            BlockType = "table",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(791),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(795),
                            ParentId = 0L,
                            Title = "Table",
                            Uuid = new Guid("a41b634d-430c-4d92-8427-2a680cb25b6d")
                        },
                        new
                        {
                            Id = 18L,
                            BlockType = "textBlock",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(801),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(805),
                            ParentId = 0L,
                            Title = "Text Block",
                            Uuid = new Guid("7af6ae34-9538-48cc-9717-7eafd01ea76c")
                        },
                        new
                        {
                            Id = 19L,
                            BlockType = "textBox",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(810),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(814),
                            ParentId = 0L,
                            Title = "TextBox",
                            Uuid = new Guid("23a60039-2e0a-4c26-800b-39f5493c5dfa")
                        },
                        new
                        {
                            Id = 20L,
                            BlockType = "timePicker",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(820),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(823),
                            ParentId = 0L,
                            Title = "Time Picker",
                            Uuid = new Guid("9f68e62d-2f71-45eb-a2e5-acb938f50189")
                        },
                        new
                        {
                            Id = 21L,
                            BlockType = "toggleSwitch",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(829),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(832),
                            ParentId = 0L,
                            Title = "Toggle Switch",
                            Uuid = new Guid("9dc6d17d-ab95-46f9-8095-c98fc0392a7a")
                        },
                        new
                        {
                            Id = 22L,
                            BlockType = "imageGallery",
                            CanHaveChildren = true,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(838),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(842),
                            ParentId = 0L,
                            Title = "Image Gallery",
                            Uuid = new Guid("439dca28-7e88-45c3-ad96-c713fe782413")
                        },
                        new
                        {
                            Id = 23L,
                            BlockType = "image",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(847),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(851),
                            ParentId = 0L,
                            Title = "Image",
                            Uuid = new Guid("d28509e8-590e-47e2-abbd-7904913325e0")
                        },
                        new
                        {
                            Id = 24L,
                            BlockType = "imageLink",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(860),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(864),
                            ParentId = 0L,
                            Title = "Image Link",
                            Uuid = new Guid("1c94af74-cd5f-44ce-8977-d13e866cf229")
                        },
                        new
                        {
                            Id = 25L,
                            BlockType = "productGallery",
                            CanHaveChildren = true,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(869),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(873),
                            ParentId = 0L,
                            Title = "Product Listing",
                            Uuid = new Guid("f0c982fd-f81c-46cf-819f-d6e77979361a")
                        },
                        new
                        {
                            Id = 26L,
                            BlockType = "product",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(878),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(882),
                            ParentId = 0L,
                            Title = "Product",
                            Uuid = new Guid("a3b6647a-96c8-47f6-88b7-e2e8f2cbe890")
                        },
                        new
                        {
                            Id = 27L,
                            BlockType = "carousel",
                            CanHaveChildren = true,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(888),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(892),
                            ParentId = 0L,
                            Title = "Carousel",
                            Uuid = new Guid("2061db41-5a41-497a-93e9-10bffbee2baf")
                        },
                        new
                        {
                            Id = 28L,
                            BlockType = "carouselItem",
                            CanHaveChildren = true,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(897),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(901),
                            ParentId = 0L,
                            Title = "Carousel Item",
                            Uuid = new Guid("b369c89e-d693-4ff4-8e05-b52c3c66f46f")
                        },
                        new
                        {
                            Id = 29L,
                            BlockType = "login",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(906),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(910),
                            ParentId = 0L,
                            Title = "Login",
                            Uuid = new Guid("c456e0df-808d-411b-8487-095f21809cf8")
                        },
                        new
                        {
                            Id = 30L,
                            BlockType = "registration",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(915),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(919),
                            ParentId = 0L,
                            Title = "Registration",
                            Uuid = new Guid("54c56227-6261-4c10-a155-e85f787e99d0")
                        },
                        new
                        {
                            Id = 31L,
                            BlockType = "shoppingBasket",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(924),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(928),
                            ParentId = 0L,
                            Title = "Shopping Basket",
                            Uuid = new Guid("85c66164-719a-4caf-8631-a431ae6101c8")
                        },
                        new
                        {
                            Id = 32L,
                            BlockType = "checkout",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(937),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(941),
                            ParentId = 0L,
                            Title = "Checkout",
                            Uuid = new Guid("b76a9951-7b2e-4033-afd3-66d14c03d682")
                        },
                        new
                        {
                            Id = 33L,
                            BlockType = "search",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(946),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(950),
                            ParentId = 0L,
                            Title = "Search",
                            Uuid = new Guid("9e0783e4-32a8-4ac2-823f-82243d6bb7cb")
                        },
                        new
                        {
                            Id = 34L,
                            BlockType = "searchItem",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(955),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(959),
                            ParentId = 0L,
                            Title = "Search Item",
                            Uuid = new Guid("40abc6ec-89fe-47b9-b778-e87283eed082")
                        },
                        new
                        {
                            Id = 35L,
                            BlockType = "card",
                            CanHaveChildren = true,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(965),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 921, DateTimeKind.Local).AddTicks(968),
                            ParentId = 0L,
                            Title = "Card",
                            Uuid = new Guid("f5c5e200-ca81-4a83-96f6-13a2d7d21cc2")
                        });
                });

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.BlockField", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BlockId")
                        .HasColumnType("bigint")
                        .HasColumnName("BlockId");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DataType");

                    b.Property<long>("SortOrder")
                        .HasColumnType("bigint")
                        .HasColumnName("SortOrder");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Uuid");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.ToTable("BlockFields");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BlockId = 1L,
                            DataType = "int",
                            SortOrder = 0L,
                            Title = "numberOfColumns",
                            Uuid = new Guid("adea54c7-0282-411b-87ce-022aa17e1f6f"),
                            Value = "1"
                        },
                        new
                        {
                            Id = 2L,
                            BlockId = 2L,
                            DataType = "string",
                            SortOrder = 0L,
                            Title = "type",
                            Uuid = new Guid("e4f3dc2d-b421-4485-b591-bbdabe6dbd73"),
                            Value = "button"
                        },
                        new
                        {
                            Id = 3L,
                            BlockId = 2L,
                            DataType = "string",
                            SortOrder = 1L,
                            Title = "text",
                            Uuid = new Guid("526c2da6-0630-4328-ab6a-9e85c7db6c92"),
                            Value = "Click"
                        },
                        new
                        {
                            Id = 4L,
                            BlockId = 2L,
                            DataType = "string",
                            SortOrder = 2L,
                            Title = "class",
                            Uuid = new Guid("6f973fd0-4656-481f-8c49-5a8e9f3fc9e7"),
                            Value = "btn"
                        });
                });

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.Page", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Binned")
                        .HasColumnType("bit")
                        .HasColumnName("Binned");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateCreated");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateModified");

                    b.Property<DateTime?>("DateScheduledExpiry")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateScheduledExpiry");

                    b.Property<DateTime?>("DateScheduledPublish")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateScheduledPublish");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit")
                        .HasColumnName("Disabled");

                    b.Property<bool>("Draft")
                        .HasColumnType("bit")
                        .HasColumnName("Draft");

                    b.Property<int>("Level")
                        .HasColumnType("int")
                        .HasColumnName("Level");

                    b.Property<string>("MetaDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MetaDescription");

                    b.Property<string>("MetaKeywords")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MetaKeywords");

                    b.Property<string>("NavigationTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NavigationTitle");

                    b.Property<string>("PageIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PageIdentifier");

                    b.Property<string>("PageTypeId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PageTypeId");

                    b.Property<string>("ParentPageIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ParentPageIdentifier");

                    b.Property<bool>("Published")
                        .HasColumnType("bit")
                        .HasColumnName("Published");

                    b.Property<string>("Route")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Route");

                    b.Property<long>("SiteId")
                        .HasColumnType("bigint")
                        .HasColumnName("SiteId");

                    b.Property<long>("SortOrder")
                        .HasColumnType("bigint")
                        .HasColumnName("SortOrder");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.ToTable("Pages");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 926, DateTimeKind.Local).AddTicks(7111),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 926, DateTimeKind.Local).AddTicks(7457),
                            DateScheduledPublish = new DateTime(2021, 8, 18, 4, 6, 11, 926, DateTimeKind.Local).AddTicks(7785),
                            Disabled = false,
                            Draft = false,
                            Level = 0,
                            MetaDescription = "",
                            MetaKeywords = "",
                            NavigationTitle = "Home",
                            PageIdentifier = "90686b10-a30a-4d7d-b942-fc752494af83",
                            PageTypeId = "Root",
                            ParentPageIdentifier = "90686b10-a30a-4d7d-b942-fc752494af83",
                            Published = true,
                            Route = "/",
                            SiteId = 1L,
                            SortOrder = 0L,
                            Title = "Home"
                        },
                        new
                        {
                            Id = 2L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 927, DateTimeKind.Local).AddTicks(2180),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 927, DateTimeKind.Local).AddTicks(2197),
                            DateScheduledPublish = new DateTime(2021, 8, 22, 4, 6, 11, 927, DateTimeKind.Local).AddTicks(2200),
                            Disabled = false,
                            Draft = false,
                            Level = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            NavigationTitle = "Portfolio",
                            PageIdentifier = "b178a0db-2358-41be-9dbe-350c41e459c8",
                            PageTypeId = "StandardPage",
                            ParentPageIdentifier = "90686b10-a30a-4d7d-b942-fc752494af83",
                            Published = true,
                            Route = "/portfolio",
                            SiteId = 1L,
                            SortOrder = 1L,
                            Title = "Portfolio"
                        },
                        new
                        {
                            Id = 3L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 927, DateTimeKind.Local).AddTicks(2206),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 927, DateTimeKind.Local).AddTicks(2209),
                            DateScheduledPublish = new DateTime(2021, 8, 22, 4, 6, 11, 927, DateTimeKind.Local).AddTicks(2211),
                            Disabled = false,
                            Draft = false,
                            Level = 2,
                            MetaDescription = "",
                            MetaKeywords = "",
                            NavigationTitle = "Regulatory Services",
                            PageIdentifier = "ca6e865f-ecaf-420b-91b7-ba54eebc8588",
                            PageTypeId = "StandardPage",
                            ParentPageIdentifier = "b178a0db-2358-41be-9dbe-350c41e459c8",
                            Published = true,
                            Route = "/portfolio/regulatory-services",
                            SiteId = 1L,
                            SortOrder = 0L,
                            Title = "Regulatory Services"
                        },
                        new
                        {
                            Id = 4L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 927, DateTimeKind.Local).AddTicks(2216),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 927, DateTimeKind.Local).AddTicks(2219),
                            DateScheduledPublish = new DateTime(2021, 8, 22, 4, 6, 11, 927, DateTimeKind.Local).AddTicks(2221),
                            Disabled = false,
                            Draft = false,
                            Level = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            NavigationTitle = "About",
                            PageIdentifier = "d6f73c6b-da4f-475f-931a-0f8f3aa15c58",
                            PageTypeId = "StandardPage",
                            ParentPageIdentifier = "90686b10-a30a-4d7d-b942-fc752494af83",
                            Published = true,
                            Route = "/about",
                            SiteId = 1L,
                            SortOrder = 0L,
                            Title = "About"
                        },
                        new
                        {
                            Id = 5L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 927, DateTimeKind.Local).AddTicks(2225),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 927, DateTimeKind.Local).AddTicks(2228),
                            DateScheduledPublish = new DateTime(2021, 8, 22, 4, 6, 11, 927, DateTimeKind.Local).AddTicks(2230),
                            Disabled = false,
                            Draft = false,
                            Level = 1,
                            MetaDescription = "",
                            MetaKeywords = "",
                            NavigationTitle = "Contact",
                            PageIdentifier = "053ddd1a-6bd1-4ac0-b3a8-406e55232639",
                            PageTypeId = "StandardPage",
                            ParentPageIdentifier = "90686b10-a30a-4d7d-b942-fc752494af83",
                            Published = true,
                            Route = "/contact",
                            SiteId = 1L,
                            SortOrder = 2L,
                            Title = "Contact"
                        },
                        new
                        {
                            Id = 6L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 927, DateTimeKind.Local).AddTicks(2235),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 927, DateTimeKind.Local).AddTicks(2237),
                            DateScheduledPublish = new DateTime(2021, 8, 19, 4, 6, 11, 927, DateTimeKind.Local).AddTicks(2240),
                            Disabled = false,
                            Draft = false,
                            Level = 0,
                            MetaDescription = "",
                            MetaKeywords = "",
                            NavigationTitle = "Home",
                            PageIdentifier = "90686b10-a30a-4d7d-b942-fc752494af83",
                            PageTypeId = "Root",
                            ParentPageIdentifier = "90686b10-a30a-4d7d-b942-fc752494af83",
                            Published = true,
                            Route = "/",
                            SiteId = 1L,
                            SortOrder = 0L,
                            Title = "Home"
                        },
                        new
                        {
                            Id = 7L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 927, DateTimeKind.Local).AddTicks(2245),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 927, DateTimeKind.Local).AddTicks(2247),
                            DateScheduledExpiry = new DateTime(2021, 8, 21, 4, 6, 11, 927, DateTimeKind.Local).AddTicks(2253),
                            DateScheduledPublish = new DateTime(2021, 8, 20, 4, 6, 11, 927, DateTimeKind.Local).AddTicks(2250),
                            Disabled = false,
                            Draft = false,
                            Level = 0,
                            MetaDescription = "",
                            MetaKeywords = "",
                            NavigationTitle = "Home",
                            PageIdentifier = "90686b10-a30a-4d7d-b942-fc752494af83",
                            PageTypeId = "Root",
                            ParentPageIdentifier = "90686b10-a30a-4d7d-b942-fc752494af83",
                            Published = true,
                            Route = "/",
                            SiteId = 1L,
                            SortOrder = 0L,
                            Title = "Home"
                        },
                        new
                        {
                            Id = 8L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 927, DateTimeKind.Local).AddTicks(2257),
                            DateModified = new DateTime(2021, 8, 22, 4, 6, 11, 927, DateTimeKind.Local).AddTicks(2260),
                            Disabled = false,
                            Draft = true,
                            Level = 0,
                            MetaDescription = "",
                            MetaKeywords = "",
                            NavigationTitle = "Home",
                            PageIdentifier = "90686b10-a30a-4d7d-b942-fc752494af83",
                            PageTypeId = "Root",
                            ParentPageIdentifier = "90686b10-a30a-4d7d-b942-fc752494af83",
                            Published = false,
                            Route = "/",
                            SiteId = 1L,
                            SortOrder = 0L,
                            Title = "Home"
                        });
                });

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.PageBlock", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BlockId")
                        .HasColumnType("bigint")
                        .HasColumnName("BlockId");

                    b.Property<long>("PageId")
                        .HasColumnType("bigint")
                        .HasColumnName("PageId");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint")
                        .HasColumnName("ParentId");

                    b.Property<long>("SortOrder")
                        .HasColumnType("bigint")
                        .HasColumnName("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("PageBlocks");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BlockId = 1L,
                            PageId = 1L,
                            ParentId = 0L,
                            SortOrder = 0L
                        });
                });

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.PageField", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DataType");

                    b.Property<long>("FieldId")
                        .HasColumnType("bigint")
                        .HasColumnName("FieldId");

                    b.Property<long>("PageBlockId")
                        .HasColumnType("bigint")
                        .HasColumnName("PageBlockId");

                    b.Property<long>("SortOrder")
                        .HasColumnType("bigint")
                        .HasColumnName("SortOrder");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.ToTable("PageFields");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DataType = "int",
                            FieldId = 1L,
                            PageBlockId = 1L,
                            SortOrder = 0L,
                            Title = "Number of Columns",
                            Value = "3"
                        });
                });

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.PageType", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Id");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Body");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateCreated");

                    b.HasKey("Id");

                    b.ToTable("PageTypes");

                    b.HasData(
                        new
                        {
                            Id = "Root",
                            Body = "{\"useBlocks\": true, \"title\": \"Homepage\"}",
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 916, DateTimeKind.Local).AddTicks(487)
                        },
                        new
                        {
                            Id = "StandardPage",
                            Body = "{\"useBlocks\": true, \"title\": \"Standard Page\"}",
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 918, DateTimeKind.Local).AddTicks(6915)
                        },
                        new
                        {
                            Id = "ProductList",
                            Body = "{\"useBlocks\": true, \"title\": \"Product List\"}",
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 918, DateTimeKind.Local).AddTicks(6979)
                        },
                        new
                        {
                            Id = "ProductDetail",
                            Body = "{\"useBlocks\": true, \"title\": \"ProductDetail\"}",
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 918, DateTimeKind.Local).AddTicks(6985)
                        },
                        new
                        {
                            Id = "EventList",
                            Body = "{\"useBlocks\": true, \"title\": \"Event List\"}",
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 918, DateTimeKind.Local).AddTicks(6991)
                        },
                        new
                        {
                            Id = "EventDetail",
                            Body = "{\"useBlocks\": true, \"title\": \"Event Detail\"}",
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 918, DateTimeKind.Local).AddTicks(6996)
                        },
                        new
                        {
                            Id = "ArticleList",
                            Body = "{\"useBlocks\": true, \"title\": \"Article List\"}",
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 918, DateTimeKind.Local).AddTicks(7001)
                        },
                        new
                        {
                            Id = "ArticleDetail",
                            Body = "{\"useBlocks\": true, \"title\": \"Article Detail\"}",
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 918, DateTimeKind.Local).AddTicks(7005)
                        },
                        new
                        {
                            Id = "FeatureLanding",
                            Body = "{\"useBlocks\": true, \"title\": \"Feature Landing\"}",
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 918, DateTimeKind.Local).AddTicks(7009)
                        },
                        new
                        {
                            Id = "Error",
                            Body = "{\"useBlocks\": true, \"title\": \"Error\"}",
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 918, DateTimeKind.Local).AddTicks(7014)
                        },
                        new
                        {
                            Id = "Search",
                            Body = "{\"useBlocks\": true, \"title\": \"Search\"}",
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 918, DateTimeKind.Local).AddTicks(7019)
                        },
                        new
                        {
                            Id = "SearchResults",
                            Body = "{\"useBlocks\": true, \"title\": \"Search Results\"}",
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 918, DateTimeKind.Local).AddTicks(7023)
                        },
                        new
                        {
                            Id = "Member",
                            Body = "{\"useBlocks\": true, \"title\": \"Member\"}",
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 918, DateTimeKind.Local).AddTicks(7027)
                        },
                        new
                        {
                            Id = "Transaction",
                            Body = "{\"useBlocks\": true, \"title\": \"Transaction\"}",
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 918, DateTimeKind.Local).AddTicks(7031)
                        });
                });

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.Site", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Culture")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Culture");

                    b.Property<string>("DomainName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("DomainName");

                    b.Property<string>("Protocol")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Protocol");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Uuid");

                    b.HasKey("Id");

                    b.ToTable("Sites");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Culture = "en-GB",
                            DomainName = "superjack.co.uk",
                            Protocol = "https",
                            Uuid = new Guid("6d624486-5520-4226-9e85-04fc15e24eed")
                        });
                });

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateCreated");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordHash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordSalt");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Status");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Surname");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DateCreated = new DateTime(2021, 8, 22, 4, 6, 11, 926, DateTimeKind.Local).AddTicks(4039),
                            FirstName = "Stef",
                            PasswordHash = new byte[] { 189, 173, 141, 28, 75, 18, 55, 88, 229, 171, 17, 162, 138, 22, 14, 245, 131, 187, 255, 190, 208, 79, 137, 49, 241, 107, 48, 252, 207, 226, 205, 74, 54, 250, 45, 7, 134, 212, 205, 134, 31, 164, 130, 58, 15, 85, 46, 146, 175, 250, 142, 93, 116, 66, 125, 8, 49, 182, 227, 49, 143, 19, 180, 121 },
                            PasswordSalt = new byte[] { 188, 253, 4, 102, 241, 168, 56, 143, 82, 248, 19, 187, 208, 126, 135, 221, 63, 216, 184, 87, 179, 89, 158, 146, 253, 185, 224, 171, 217, 247, 145, 195, 115, 140, 59, 118, 235, 245, 88, 194, 35, 37, 246, 200, 21, 81, 123, 62, 7, 163, 246, 172, 250, 248, 211, 139, 3, 90, 179, 233, 9, 10, 125, 80, 167, 5, 254, 28, 99, 6, 118, 174, 37, 53, 182, 3, 197, 208, 121, 224, 115, 45, 228, 208, 145, 94, 243, 170, 234, 5, 87, 49, 243, 158, 159, 69, 97, 55, 58, 160, 37, 246, 228, 208, 133, 255, 213, 173, 3, 125, 105, 69, 83, 20, 37, 54, 198, 22, 48, 157, 241, 26, 134, 125, 118, 101, 147, 205 },
                            Status = "Active",
                            Surname = "Cunning",
                            Username = "services@superjack.co.uk"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
