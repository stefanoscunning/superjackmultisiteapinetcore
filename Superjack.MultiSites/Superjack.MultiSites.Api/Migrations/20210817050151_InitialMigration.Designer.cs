// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Superjack.MultiSites.Api.DataAccess;

namespace Superjack.MultiSites.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210817050151_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.Block", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BlockType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BlockType");

                    b.Property<bool>("CanHaveChildren")
                        .HasColumnType("bit")
                        .HasColumnName("CanHaveChildren");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateCreated");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateModified");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint")
                        .HasColumnName("ParentId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Uuid");

                    b.HasKey("Id");

                    b.ToTable("Blocks");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BlockType = "columnContainer",
                            CanHaveChildren = true,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(2648),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(3032),
                            ParentId = 0L,
                            Title = "Columns",
                            Uuid = new Guid("a34e1081-f366-47e6-bc82-c36ccb75bf4e")
                        },
                        new
                        {
                            Id = 2L,
                            BlockType = "button",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4274),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4289),
                            ParentId = 0L,
                            Title = "Button",
                            Uuid = new Guid("79d5e8db-1a56-476a-a4d8-c1a092a9e203")
                        },
                        new
                        {
                            Id = 3L,
                            BlockType = "checkbox",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4294),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4297),
                            ParentId = 0L,
                            Title = "Checkbox",
                            Uuid = new Guid("9d5a2498-d7a2-4908-ae72-7a022f1970f4")
                        },
                        new
                        {
                            Id = 4L,
                            BlockType = "checklist",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4300),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4303),
                            ParentId = 0L,
                            Title = "Checklist",
                            Uuid = new Guid("4e0da359-e8dc-41ad-879f-2290a83a8adb")
                        },
                        new
                        {
                            Id = 5L,
                            BlockType = "dataListGroup",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4320),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4322),
                            ParentId = 0L,
                            Title = "Data List Group",
                            Uuid = new Guid("6ba04336-662d-4d79-b5dc-d8aedb021a85")
                        },
                        new
                        {
                            Id = 6L,
                            BlockType = "datePicker",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4327),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4329),
                            ParentId = 0L,
                            Title = "Date Picker",
                            Uuid = new Guid("f58ffd9d-e287-49fa-b7b3-0bc24e77196d")
                        },
                        new
                        {
                            Id = 7L,
                            BlockType = "divider",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4333),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4336),
                            ParentId = 0L,
                            Title = "Divider",
                            Uuid = new Guid("25c1244a-dd67-4611-aa96-31c5b490bdc4")
                        },
                        new
                        {
                            Id = 8L,
                            BlockType = "dropDown",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4340),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4343),
                            ParentId = 0L,
                            Title = "Drop-down",
                            Uuid = new Guid("76f34739-4eb0-4c7c-b7a2-69e8471ae9f3")
                        },
                        new
                        {
                            Id = 9L,
                            BlockType = "editableTable",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4347),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4349),
                            ParentId = 0L,
                            Title = "Editable Table",
                            Uuid = new Guid("55d8109c-568d-44b3-8f2a-52fb18c915ca")
                        },
                        new
                        {
                            Id = 10L,
                            BlockType = "fileUpload",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4353),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4356),
                            ParentId = 0L,
                            Title = "File Upload",
                            Uuid = new Guid("689bbf97-a547-402b-9378-f3d8b6d3f780")
                        },
                        new
                        {
                            Id = 11L,
                            BlockType = "heading",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4363),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4366),
                            ParentId = 0L,
                            Title = "heading",
                            Uuid = new Guid("408df0c0-8eed-4584-9497-fd1151d8d898")
                        },
                        new
                        {
                            Id = 12L,
                            BlockType = "subHeading",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4369),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4372),
                            ParentId = 0L,
                            Title = "Sub-heading",
                            Uuid = new Guid("67856401-6a6c-4935-be7a-a105a6bb265b")
                        },
                        new
                        {
                            Id = 13L,
                            BlockType = "listGroup",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4379),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4382),
                            ParentId = 0L,
                            Title = "List Group",
                            Uuid = new Guid("cb6290be-aea6-4748-89e1-343a80b68303")
                        },
                        new
                        {
                            Id = 14L,
                            BlockType = "multiLineTextbox",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4386),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4388),
                            ParentId = 0L,
                            Title = "Multi-line Textbox",
                            Uuid = new Guid("62dab29b-a81f-4c82-b545-f699565f99f4")
                        },
                        new
                        {
                            Id = 15L,
                            BlockType = "radioGroup",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4393),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4395),
                            ParentId = 0L,
                            Title = "Radio Group",
                            Uuid = new Guid("a78921dc-c657-450b-9552-96dd7fa93198")
                        },
                        new
                        {
                            Id = 16L,
                            BlockType = "signature",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4399),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4402),
                            ParentId = 0L,
                            Title = "Signature",
                            Uuid = new Guid("d3a2900b-9f9d-4094-9756-b37e74421c77")
                        },
                        new
                        {
                            Id = 17L,
                            BlockType = "table",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4406),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4409),
                            ParentId = 0L,
                            Title = "Table",
                            Uuid = new Guid("2cf0f106-a6a1-4c65-b0da-59c428d09244")
                        },
                        new
                        {
                            Id = 18L,
                            BlockType = "textBlock",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4412),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4415),
                            ParentId = 0L,
                            Title = "Text Block",
                            Uuid = new Guid("1e1372a6-8721-4744-a0bd-ab12db04a97f")
                        },
                        new
                        {
                            Id = 19L,
                            BlockType = "textBox",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4419),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4421),
                            ParentId = 0L,
                            Title = "TextBox",
                            Uuid = new Guid("5921d796-32fa-496e-ab40-3c0fb381b339")
                        },
                        new
                        {
                            Id = 20L,
                            BlockType = "timePicker",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4425),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4428),
                            ParentId = 0L,
                            Title = "Time Picker",
                            Uuid = new Guid("c5578a5f-8639-4d29-a80b-9efcb617115e")
                        },
                        new
                        {
                            Id = 21L,
                            BlockType = "toggleSwitch",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4435),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4438),
                            ParentId = 0L,
                            Title = "Toggle Switch",
                            Uuid = new Guid("cc10da55-2cdd-4fa9-bda6-eeb2f3b65eeb")
                        },
                        new
                        {
                            Id = 22L,
                            BlockType = "imageGallery",
                            CanHaveChildren = true,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4442),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4444),
                            ParentId = 0L,
                            Title = "Image Gallery",
                            Uuid = new Guid("6571dd6c-eff9-40c4-a8aa-fdace8cb0588")
                        },
                        new
                        {
                            Id = 23L,
                            BlockType = "image",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4448),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4451),
                            ParentId = 0L,
                            Title = "Image",
                            Uuid = new Guid("c9b04e1d-2cd9-4fb5-a86a-f1a9cf8228c4")
                        },
                        new
                        {
                            Id = 24L,
                            BlockType = "imageLink",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4455),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4458),
                            ParentId = 0L,
                            Title = "Image Link",
                            Uuid = new Guid("d67e7198-082d-4066-90ad-6602e39e26b0")
                        },
                        new
                        {
                            Id = 25L,
                            BlockType = "productGallery",
                            CanHaveChildren = true,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4462),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4464),
                            ParentId = 0L,
                            Title = "Product Listing",
                            Uuid = new Guid("4e05ee00-d8c2-48ed-af1e-b1cc70f3e25f")
                        },
                        new
                        {
                            Id = 26L,
                            BlockType = "product",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4468),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4471),
                            ParentId = 0L,
                            Title = "Product",
                            Uuid = new Guid("e8289a0e-c50d-425a-8cc0-0f7ed5d0f5f6")
                        },
                        new
                        {
                            Id = 27L,
                            BlockType = "carousel",
                            CanHaveChildren = true,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4475),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4477),
                            ParentId = 0L,
                            Title = "Carousel",
                            Uuid = new Guid("05279ecc-9a0b-402b-95f4-87ae29a88a2d")
                        },
                        new
                        {
                            Id = 28L,
                            BlockType = "carouselItem",
                            CanHaveChildren = true,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4481),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4484),
                            ParentId = 0L,
                            Title = "Carousel Item",
                            Uuid = new Guid("e9e28982-0145-4afc-9418-003df62c252d")
                        },
                        new
                        {
                            Id = 29L,
                            BlockType = "login",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4490),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4493),
                            ParentId = 0L,
                            Title = "Login",
                            Uuid = new Guid("a7a85383-8438-4730-9e4f-6870c9eeebb3")
                        },
                        new
                        {
                            Id = 30L,
                            BlockType = "registration",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4497),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4499),
                            ParentId = 0L,
                            Title = "Registration",
                            Uuid = new Guid("a8247b1c-7b2f-492a-bef7-cb6fc01f13b5")
                        },
                        new
                        {
                            Id = 31L,
                            BlockType = "shoppingBasket",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4503),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4506),
                            ParentId = 0L,
                            Title = "Shopping Basket",
                            Uuid = new Guid("99782897-9985-4f23-9c40-9f9abd8b920f")
                        },
                        new
                        {
                            Id = 32L,
                            BlockType = "checkout",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4510),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4513),
                            ParentId = 0L,
                            Title = "Checkout",
                            Uuid = new Guid("f7d331ca-6081-494d-b463-08fbe396ffcd")
                        },
                        new
                        {
                            Id = 33L,
                            BlockType = "search",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4516),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4519),
                            ParentId = 0L,
                            Title = "Search",
                            Uuid = new Guid("f48328c4-8676-42af-a343-08ea2a20c15b")
                        },
                        new
                        {
                            Id = 34L,
                            BlockType = "searchItem",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4523),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4526),
                            ParentId = 0L,
                            Title = "Search Item",
                            Uuid = new Guid("c96987cf-7d6a-4a6e-bc6f-13bc3038858c")
                        },
                        new
                        {
                            Id = 35L,
                            BlockType = "card",
                            CanHaveChildren = true,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4530),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 696, DateTimeKind.Local).AddTicks(4532),
                            ParentId = 0L,
                            Title = "Card",
                            Uuid = new Guid("b1719a5e-96b0-4484-92a0-a44014862de4")
                        });
                });

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.BlockField", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BlockId")
                        .HasColumnType("bigint")
                        .HasColumnName("BlockId");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DataType");

                    b.Property<long>("SortOrder")
                        .HasColumnType("bigint")
                        .HasColumnName("SortOrder");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Uuid");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.ToTable("BlockFields");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BlockId = 1L,
                            DataType = "int",
                            SortOrder = 0L,
                            Title = "numberOfColumns",
                            Uuid = new Guid("674813a9-25e1-455b-9d9f-a48891689f56"),
                            Value = "1"
                        },
                        new
                        {
                            Id = 2L,
                            BlockId = 2L,
                            DataType = "string",
                            SortOrder = 0L,
                            Title = "type",
                            Uuid = new Guid("d758bcb3-e67f-4332-bffb-f5c6112842bd"),
                            Value = "button"
                        },
                        new
                        {
                            Id = 3L,
                            BlockId = 2L,
                            DataType = "string",
                            SortOrder = 1L,
                            Title = "text",
                            Uuid = new Guid("15fcb375-aceb-46bb-95f1-2d7642f067c3"),
                            Value = "Click"
                        },
                        new
                        {
                            Id = 4L,
                            BlockId = 2L,
                            DataType = "string",
                            SortOrder = 2L,
                            Title = "class",
                            Uuid = new Guid("a173a2fb-f817-4c6c-82f8-72f8e2b2dcb4"),
                            Value = "btn"
                        });
                });

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.Page", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Binned")
                        .HasColumnType("bit")
                        .HasColumnName("Binned");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateCreated");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateModified");

                    b.Property<DateTime?>("DateScheduledExpiry")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateScheduledExpiry");

                    b.Property<DateTime?>("DateScheduledPublish")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateScheduledPublish");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit")
                        .HasColumnName("Disabled");

                    b.Property<bool>("Draft")
                        .HasColumnType("bit")
                        .HasColumnName("Draft");

                    b.Property<int>("Level")
                        .HasColumnType("int")
                        .HasColumnName("Level");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MetaDescription");

                    b.Property<string>("MetaKeywords")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MetaKeywords");

                    b.Property<string>("NavigationTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NavigationTitle");

                    b.Property<string>("PageIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PageIdentifier");

                    b.Property<string>("PageTypeId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PageTypeId");

                    b.Property<string>("ParentPageIdentifier")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ParentPageIdentifier");

                    b.Property<bool>("Published")
                        .HasColumnType("bit")
                        .HasColumnName("Published");

                    b.Property<string>("Route")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Route");

                    b.Property<long>("SiteId")
                        .HasColumnType("bigint")
                        .HasColumnName("SiteId");

                    b.Property<long>("SortOrder")
                        .HasColumnType("bigint")
                        .HasColumnName("SortOrder");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.ToTable("Pages");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 700, DateTimeKind.Local).AddTicks(9239),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 700, DateTimeKind.Local).AddTicks(9585),
                            DateScheduledPublish = new DateTime(2021, 8, 13, 6, 1, 50, 700, DateTimeKind.Local).AddTicks(9914),
                            Disabled = false,
                            Draft = false,
                            Level = 0,
                            NavigationTitle = "Home",
                            PageIdentifier = "2aaf5367-5bb6-4c9b-aa6f-37ee7c8e5389",
                            PageTypeId = "Root",
                            Published = true,
                            Route = "/",
                            SiteId = 1L,
                            SortOrder = 0L,
                            Title = "Home"
                        },
                        new
                        {
                            Id = 2L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 701, DateTimeKind.Local).AddTicks(4235),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 701, DateTimeKind.Local).AddTicks(4251),
                            DateScheduledPublish = new DateTime(2021, 8, 17, 6, 1, 50, 701, DateTimeKind.Local).AddTicks(4254),
                            Disabled = false,
                            Draft = false,
                            Level = 1,
                            NavigationTitle = "Portfolio",
                            PageIdentifier = "8b2c6ae6-40a4-4920-9b09-14bf27c9de14",
                            PageTypeId = "StandardPage",
                            ParentPageIdentifier = "2aaf5367-5bb6-4c9b-aa6f-37ee7c8e5389",
                            Published = true,
                            Route = "/portfolio",
                            SiteId = 1L,
                            SortOrder = 1L,
                            Title = "Portfolio"
                        },
                        new
                        {
                            Id = 3L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 701, DateTimeKind.Local).AddTicks(4260),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 701, DateTimeKind.Local).AddTicks(4263),
                            DateScheduledPublish = new DateTime(2021, 8, 17, 6, 1, 50, 701, DateTimeKind.Local).AddTicks(4265),
                            Disabled = false,
                            Draft = false,
                            Level = 2,
                            NavigationTitle = "Regulatory Services",
                            PageIdentifier = "da5c2b0d-5617-407d-a04b-045c945b89ca",
                            PageTypeId = "StandardPage",
                            ParentPageIdentifier = "8b2c6ae6-40a4-4920-9b09-14bf27c9de14",
                            Published = true,
                            Route = "/portfolio/regulatory-services",
                            SiteId = 1L,
                            SortOrder = 0L,
                            Title = "Regulatory Services"
                        },
                        new
                        {
                            Id = 4L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 701, DateTimeKind.Local).AddTicks(4270),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 701, DateTimeKind.Local).AddTicks(4272),
                            DateScheduledPublish = new DateTime(2021, 8, 17, 6, 1, 50, 701, DateTimeKind.Local).AddTicks(4275),
                            Disabled = false,
                            Draft = false,
                            Level = 1,
                            NavigationTitle = "About",
                            PageIdentifier = "1140bd07-b78e-4181-90d2-7a15867e902c",
                            PageTypeId = "StandardPage",
                            ParentPageIdentifier = "2aaf5367-5bb6-4c9b-aa6f-37ee7c8e5389",
                            Published = true,
                            Route = "/about",
                            SiteId = 1L,
                            SortOrder = 0L,
                            Title = "About"
                        },
                        new
                        {
                            Id = 5L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 701, DateTimeKind.Local).AddTicks(4279),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 701, DateTimeKind.Local).AddTicks(4282),
                            DateScheduledPublish = new DateTime(2021, 8, 17, 6, 1, 50, 701, DateTimeKind.Local).AddTicks(4284),
                            Disabled = false,
                            Draft = false,
                            Level = 1,
                            NavigationTitle = "Contact",
                            PageIdentifier = "e1a0b1e8-53f4-46e9-a986-b5a912ced43a",
                            PageTypeId = "StandardPage",
                            ParentPageIdentifier = "2aaf5367-5bb6-4c9b-aa6f-37ee7c8e5389",
                            Published = true,
                            Route = "/contact",
                            SiteId = 1L,
                            SortOrder = 2L,
                            Title = "Contact"
                        },
                        new
                        {
                            Id = 6L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 701, DateTimeKind.Local).AddTicks(4289),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 701, DateTimeKind.Local).AddTicks(4291),
                            DateScheduledPublish = new DateTime(2021, 8, 14, 6, 1, 50, 701, DateTimeKind.Local).AddTicks(4294),
                            Disabled = false,
                            Draft = false,
                            Level = 0,
                            NavigationTitle = "Home",
                            PageIdentifier = "2aaf5367-5bb6-4c9b-aa6f-37ee7c8e5389",
                            PageTypeId = "Root",
                            Published = true,
                            Route = "/",
                            SiteId = 1L,
                            SortOrder = 0L,
                            Title = "Home"
                        },
                        new
                        {
                            Id = 7L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 701, DateTimeKind.Local).AddTicks(4298),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 701, DateTimeKind.Local).AddTicks(4301),
                            DateScheduledExpiry = new DateTime(2021, 8, 16, 6, 1, 50, 701, DateTimeKind.Local).AddTicks(4306),
                            DateScheduledPublish = new DateTime(2021, 8, 15, 6, 1, 50, 701, DateTimeKind.Local).AddTicks(4304),
                            Disabled = false,
                            Draft = false,
                            Level = 0,
                            NavigationTitle = "Home",
                            PageIdentifier = "2aaf5367-5bb6-4c9b-aa6f-37ee7c8e5389",
                            PageTypeId = "Root",
                            Published = true,
                            Route = "/",
                            SiteId = 1L,
                            SortOrder = 0L,
                            Title = "Home"
                        },
                        new
                        {
                            Id = 8L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 701, DateTimeKind.Local).AddTicks(4311),
                            DateModified = new DateTime(2021, 8, 17, 6, 1, 50, 701, DateTimeKind.Local).AddTicks(4313),
                            Disabled = false,
                            Draft = true,
                            Level = 0,
                            NavigationTitle = "Home",
                            PageIdentifier = "2aaf5367-5bb6-4c9b-aa6f-37ee7c8e5389",
                            PageTypeId = "Root",
                            Published = false,
                            Route = "/",
                            SiteId = 1L,
                            SortOrder = 0L,
                            Title = "Home"
                        });
                });

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.PageBlock", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BlockId")
                        .HasColumnType("bigint")
                        .HasColumnName("BlockId");

                    b.Property<long>("PageId")
                        .HasColumnType("bigint")
                        .HasColumnName("PageId");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint")
                        .HasColumnName("ParentId");

                    b.Property<long>("SortOrder")
                        .HasColumnType("bigint")
                        .HasColumnName("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("PageBlocks");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BlockId = 1L,
                            PageId = 1L,
                            ParentId = 0L,
                            SortOrder = 0L
                        });
                });

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.PageField", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DataType");

                    b.Property<long>("FieldId")
                        .HasColumnType("bigint")
                        .HasColumnName("FieldId");

                    b.Property<long>("PageBlockId")
                        .HasColumnType("bigint")
                        .HasColumnName("PageBlockId");

                    b.Property<long>("SortOrder")
                        .HasColumnType("bigint")
                        .HasColumnName("SortOrder");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.ToTable("PageFields");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DataType = "int",
                            FieldId = 1L,
                            PageBlockId = 1L,
                            SortOrder = 0L,
                            Title = "Number of Columns",
                            Value = "3"
                        });
                });

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.PageType", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Id");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Body");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateCreated");

                    b.HasKey("Id");

                    b.ToTable("PageTypes");

                    b.HasData(
                        new
                        {
                            Id = "Root",
                            Body = "{\"useBlocks\": true, \"title\": \"Homepage\"}",
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 692, DateTimeKind.Local).AddTicks(2767)
                        },
                        new
                        {
                            Id = "StandardPage",
                            Body = "{\"useBlocks\": true, \"title\": \"Standard Page\"}",
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 694, DateTimeKind.Local).AddTicks(7368)
                        },
                        new
                        {
                            Id = "ProductList",
                            Body = "{\"useBlocks\": true, \"title\": \"Product List\"}",
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 694, DateTimeKind.Local).AddTicks(7409)
                        },
                        new
                        {
                            Id = "ProductDetail",
                            Body = "{\"useBlocks\": true, \"title\": \"ProductDetail\"}",
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 694, DateTimeKind.Local).AddTicks(7414)
                        },
                        new
                        {
                            Id = "EventList",
                            Body = "{\"useBlocks\": true, \"title\": \"Event List\"}",
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 694, DateTimeKind.Local).AddTicks(7418)
                        },
                        new
                        {
                            Id = "EventDetail",
                            Body = "{\"useBlocks\": true, \"title\": \"Event Detail\"}",
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 694, DateTimeKind.Local).AddTicks(7421)
                        },
                        new
                        {
                            Id = "ArticleList",
                            Body = "{\"useBlocks\": true, \"title\": \"Article List\"}",
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 694, DateTimeKind.Local).AddTicks(7424)
                        },
                        new
                        {
                            Id = "ArticleDetail",
                            Body = "{\"useBlocks\": true, \"title\": \"Article Detail\"}",
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 694, DateTimeKind.Local).AddTicks(7427)
                        },
                        new
                        {
                            Id = "FeatureLanding",
                            Body = "{\"useBlocks\": true, \"title\": \"Feature Landing\"}",
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 694, DateTimeKind.Local).AddTicks(7430)
                        },
                        new
                        {
                            Id = "Error",
                            Body = "{\"useBlocks\": true, \"title\": \"Error\"}",
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 694, DateTimeKind.Local).AddTicks(7433)
                        },
                        new
                        {
                            Id = "Search",
                            Body = "{\"useBlocks\": true, \"title\": \"Search\"}",
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 694, DateTimeKind.Local).AddTicks(7436)
                        },
                        new
                        {
                            Id = "SearchResults",
                            Body = "{\"useBlocks\": true, \"title\": \"Search Results\"}",
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 694, DateTimeKind.Local).AddTicks(7438)
                        },
                        new
                        {
                            Id = "Member",
                            Body = "{\"useBlocks\": true, \"title\": \"Member\"}",
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 694, DateTimeKind.Local).AddTicks(7441)
                        },
                        new
                        {
                            Id = "Transaction",
                            Body = "{\"useBlocks\": true, \"title\": \"Transaction\"}",
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 694, DateTimeKind.Local).AddTicks(7444)
                        });
                });

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.Site", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Culture")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Culture");

                    b.Property<string>("DomainName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("DomainName");

                    b.Property<string>("Protocol")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Protocol");

                    b.Property<Guid>("Uuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Uuid");

                    b.HasKey("Id");

                    b.ToTable("Sites");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Culture = "en-GB",
                            DomainName = "superjack.co.uk",
                            Protocol = "https",
                            Uuid = new Guid("b42a2198-1393-46bf-8d82-70f5eeecfa9a")
                        });
                });

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateCreated");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordHash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordSalt");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Status");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Surname");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DateCreated = new DateTime(2021, 8, 17, 6, 1, 50, 700, DateTimeKind.Local).AddTicks(6593),
                            FirstName = "Stef",
                            PasswordHash = new byte[] { 233, 65, 27, 88, 163, 0, 41, 251, 167, 190, 175, 230, 184, 147, 213, 249, 124, 29, 218, 14, 233, 159, 11, 52, 133, 180, 6, 92, 137, 127, 161, 97, 27, 22, 23, 8, 131, 41, 233, 165, 156, 95, 115, 50, 65, 17, 105, 230, 160, 185, 170, 230, 195, 28, 226, 176, 122, 14, 181, 141, 71, 251, 250, 99 },
                            PasswordSalt = new byte[] { 212, 97, 134, 241, 158, 201, 186, 65, 150, 116, 171, 70, 228, 27, 183, 80, 230, 38, 166, 250, 3, 145, 91, 28, 102, 203, 53, 45, 50, 198, 136, 132, 248, 18, 210, 36, 87, 49, 181, 255, 121, 83, 167, 123, 216, 254, 135, 241, 113, 27, 99, 44, 252, 167, 40, 113, 93, 245, 38, 18, 109, 133, 199, 63, 104, 165, 174, 248, 158, 14, 59, 61, 96, 212, 28, 224, 230, 45, 239, 118, 189, 195, 8, 52, 128, 13, 252, 25, 65, 149, 81, 26, 41, 165, 242, 65, 31, 2, 76, 243, 110, 208, 159, 191, 239, 155, 32, 129, 183, 69, 40, 3, 171, 8, 49, 38, 58, 109, 208, 40, 176, 0, 148, 13, 144, 138, 61, 116 },
                            Status = "Active",
                            Surname = "Cunning",
                            Username = "services@superjack.co.uk"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
