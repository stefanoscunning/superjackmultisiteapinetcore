// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Superjack.MultiSites.Api.DataAccess;

namespace Superjack.MultiSites.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210329211901_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.Block", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BlockType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BlockType");

                    b.Property<bool>("CanHaveChildren")
                        .HasColumnType("bit")
                        .HasColumnName("CanHaveChildren");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateCreated");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateModified");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint")
                        .HasColumnName("ParentId");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.ToTable("Blocks");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BlockType = "columnContainer",
                            CanHaveChildren = true,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 913, DateTimeKind.Local).AddTicks(7682),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 913, DateTimeKind.Local).AddTicks(9469),
                            ParentId = 0L,
                            Title = "Columns"
                        },
                        new
                        {
                            Id = 2L,
                            BlockType = "button",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5429),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5498),
                            ParentId = 0L,
                            Title = "Button"
                        },
                        new
                        {
                            Id = 3L,
                            BlockType = "checkbox",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5511),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5519),
                            ParentId = 0L,
                            Title = "Checkbox"
                        },
                        new
                        {
                            Id = 4L,
                            BlockType = "checklist",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5528),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5536),
                            ParentId = 0L,
                            Title = "Checklist"
                        },
                        new
                        {
                            Id = 5L,
                            BlockType = "dataListGroup",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5545),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5553),
                            ParentId = 0L,
                            Title = "Data List Group"
                        },
                        new
                        {
                            Id = 6L,
                            BlockType = "datePicker",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5563),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5571),
                            ParentId = 0L,
                            Title = "Date Picker"
                        },
                        new
                        {
                            Id = 7L,
                            BlockType = "divider",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5580),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5588),
                            ParentId = 0L,
                            Title = "Divider"
                        },
                        new
                        {
                            Id = 8L,
                            BlockType = "dropDown",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5597),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5605),
                            ParentId = 0L,
                            Title = "Drop-down"
                        },
                        new
                        {
                            Id = 9L,
                            BlockType = "editableTable",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5615),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5622),
                            ParentId = 0L,
                            Title = "Editable Table"
                        },
                        new
                        {
                            Id = 10L,
                            BlockType = "fileUpload",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5631),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5639),
                            ParentId = 0L,
                            Title = "File Upload"
                        },
                        new
                        {
                            Id = 11L,
                            BlockType = "heading",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5648),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5655),
                            ParentId = 0L,
                            Title = "heading"
                        },
                        new
                        {
                            Id = 12L,
                            BlockType = "subHeading",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5664),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5672),
                            ParentId = 0L,
                            Title = "Sub-heading"
                        },
                        new
                        {
                            Id = 13L,
                            BlockType = "listGroup",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5681),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5689),
                            ParentId = 0L,
                            Title = "List Group"
                        },
                        new
                        {
                            Id = 14L,
                            BlockType = "multiLineTextbox",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5697),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5706),
                            ParentId = 0L,
                            Title = "Multi-line Textbox"
                        },
                        new
                        {
                            Id = 15L,
                            BlockType = "radioGroup",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5715),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5723),
                            ParentId = 0L,
                            Title = "Radio Group"
                        },
                        new
                        {
                            Id = 16L,
                            BlockType = "signature",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5799),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5810),
                            ParentId = 0L,
                            Title = "Signature"
                        },
                        new
                        {
                            Id = 17L,
                            BlockType = "table",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5819),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5826),
                            ParentId = 0L,
                            Title = "Table"
                        },
                        new
                        {
                            Id = 18L,
                            BlockType = "textBlock",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5835),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5843),
                            ParentId = 0L,
                            Title = "Text Block"
                        },
                        new
                        {
                            Id = 19L,
                            BlockType = "textBox",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5852),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5860),
                            ParentId = 0L,
                            Title = "TextBox"
                        },
                        new
                        {
                            Id = 20L,
                            BlockType = "timePicker",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5869),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5877),
                            ParentId = 0L,
                            Title = "Time Picker"
                        },
                        new
                        {
                            Id = 21L,
                            BlockType = "toggleSwitch",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5886),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5894),
                            ParentId = 0L,
                            Title = "Toggle Switch"
                        },
                        new
                        {
                            Id = 22L,
                            BlockType = "imageGallery",
                            CanHaveChildren = true,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5902),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5910),
                            ParentId = 0L,
                            Title = "Image Gallery"
                        },
                        new
                        {
                            Id = 23L,
                            BlockType = "image",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5919),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5926),
                            ParentId = 0L,
                            Title = "Image"
                        },
                        new
                        {
                            Id = 24L,
                            BlockType = "imageLink",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5936),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5944),
                            ParentId = 0L,
                            Title = "Image Link"
                        },
                        new
                        {
                            Id = 25L,
                            BlockType = "productGallery",
                            CanHaveChildren = true,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5953),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5961),
                            ParentId = 0L,
                            Title = "Product Listing"
                        },
                        new
                        {
                            Id = 26L,
                            BlockType = "product",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5969),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5977),
                            ParentId = 0L,
                            Title = "Product"
                        },
                        new
                        {
                            Id = 27L,
                            BlockType = "carousel",
                            CanHaveChildren = true,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5986),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(5994),
                            ParentId = 0L,
                            Title = "Carousel"
                        },
                        new
                        {
                            Id = 28L,
                            BlockType = "carouselItem",
                            CanHaveChildren = true,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(6002),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(6010),
                            ParentId = 0L,
                            Title = "Carousel Item"
                        },
                        new
                        {
                            Id = 29L,
                            BlockType = "login",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(6019),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(6027),
                            ParentId = 0L,
                            Title = "Login"
                        },
                        new
                        {
                            Id = 30L,
                            BlockType = "registration",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(6035),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(6043),
                            ParentId = 0L,
                            Title = "Registration"
                        },
                        new
                        {
                            Id = 31L,
                            BlockType = "shoppingBasket",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(6052),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(6060),
                            ParentId = 0L,
                            Title = "Shopping Basket"
                        },
                        new
                        {
                            Id = 32L,
                            BlockType = "checkout",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(6069),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(6077),
                            ParentId = 0L,
                            Title = "Checkout"
                        },
                        new
                        {
                            Id = 33L,
                            BlockType = "search",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(6086),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(6094),
                            ParentId = 0L,
                            Title = "Search"
                        },
                        new
                        {
                            Id = 34L,
                            BlockType = "searchItem",
                            CanHaveChildren = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(6104),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(6112),
                            ParentId = 0L,
                            Title = "Search Item"
                        },
                        new
                        {
                            Id = 35L,
                            BlockType = "card",
                            CanHaveChildren = true,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(6120),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 914, DateTimeKind.Local).AddTicks(6128),
                            ParentId = 0L,
                            Title = "Card"
                        });
                });

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.BlockField", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BlockId")
                        .HasColumnType("bigint")
                        .HasColumnName("BlockId");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DataType");

                    b.Property<long>("SortOrder")
                        .HasColumnType("bigint")
                        .HasColumnName("SortOrder");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.ToTable("BlockFields");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BlockId = 1L,
                            DataType = "int",
                            SortOrder = 0L,
                            Title = "Number of Columns",
                            Value = "1"
                        });
                });

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.Page", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Binned")
                        .HasColumnType("bit")
                        .HasColumnName("Binned");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateCreated");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateModified");

                    b.Property<DateTime?>("DateScheduledExpiry")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateScheduledExpiry");

                    b.Property<DateTime?>("DateScheduledPublish")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateScheduledPublish");

                    b.Property<bool>("Disabled")
                        .HasColumnType("bit")
                        .HasColumnName("Disabled");

                    b.Property<bool>("Draft")
                        .HasColumnType("bit")
                        .HasColumnName("Draft");

                    b.Property<int>("Level")
                        .HasColumnType("int")
                        .HasColumnName("Level");

                    b.Property<string>("MetaDescription")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MetaDescription");

                    b.Property<string>("MetaKeywords")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MetaKeywords");

                    b.Property<string>("NavigationTitle")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NavigationTitle");

                    b.Property<string>("PageIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PageIdentifier");

                    b.Property<string>("PageTypeId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PageTypeId");

                    b.Property<string>("ParentPageIdentifier")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ParentPageIdentifier");

                    b.Property<bool>("Published")
                        .HasColumnType("bit")
                        .HasColumnName("Published");

                    b.Property<string>("Route")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Route");

                    b.Property<long>("SiteId")
                        .HasColumnType("bigint")
                        .HasColumnName("SiteId");

                    b.Property<long>("SortOrder")
                        .HasColumnType("bigint")
                        .HasColumnName("SortOrder");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.HasKey("Id");

                    b.ToTable("Pages");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 937, DateTimeKind.Local).AddTicks(8742),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 938, DateTimeKind.Local).AddTicks(2097),
                            DateScheduledPublish = new DateTime(2021, 3, 25, 22, 18, 58, 938, DateTimeKind.Local).AddTicks(4527),
                            Disabled = false,
                            Draft = false,
                            Level = 0,
                            NavigationTitle = "Home",
                            PageIdentifier = "f8baa4da-57dc-4e55-a091-bc975ba824e7",
                            PageTypeId = "Root",
                            Published = true,
                            Route = "/",
                            SiteId = 1L,
                            SortOrder = 0L,
                            Title = "Home"
                        },
                        new
                        {
                            Id = 2L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 940, DateTimeKind.Local).AddTicks(8322),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 940, DateTimeKind.Local).AddTicks(8447),
                            DateScheduledPublish = new DateTime(2021, 3, 29, 22, 18, 58, 940, DateTimeKind.Local).AddTicks(8457),
                            Disabled = false,
                            Draft = false,
                            Level = 1,
                            NavigationTitle = "Portfolio",
                            PageIdentifier = "4e9ee63a-fe9e-4be9-b8d7-0529969450cf",
                            PageTypeId = "StandardPage",
                            ParentPageIdentifier = "f8baa4da-57dc-4e55-a091-bc975ba824e7",
                            Published = true,
                            Route = "/portfolio",
                            SiteId = 1L,
                            SortOrder = 1L,
                            Title = "Portfolio"
                        },
                        new
                        {
                            Id = 3L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 940, DateTimeKind.Local).AddTicks(8477),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 940, DateTimeKind.Local).AddTicks(8487),
                            DateScheduledPublish = new DateTime(2021, 3, 29, 22, 18, 58, 940, DateTimeKind.Local).AddTicks(8495),
                            Disabled = false,
                            Draft = false,
                            Level = 2,
                            NavigationTitle = "Regulatory Services",
                            PageIdentifier = "9068031f-cf82-44b8-bf21-8216b6923311",
                            PageTypeId = "StandardPage",
                            ParentPageIdentifier = "4e9ee63a-fe9e-4be9-b8d7-0529969450cf",
                            Published = true,
                            Route = "/portfolio/regulatory-services",
                            SiteId = 1L,
                            SortOrder = 0L,
                            Title = "Regulatory Services"
                        },
                        new
                        {
                            Id = 4L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 940, DateTimeKind.Local).AddTicks(8507),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 940, DateTimeKind.Local).AddTicks(8516),
                            DateScheduledPublish = new DateTime(2021, 3, 29, 22, 18, 58, 940, DateTimeKind.Local).AddTicks(8524),
                            Disabled = false,
                            Draft = false,
                            Level = 1,
                            NavigationTitle = "About",
                            PageIdentifier = "528af808-61b1-48bc-b9d7-560f2d0718a8",
                            PageTypeId = "StandardPage",
                            ParentPageIdentifier = "f8baa4da-57dc-4e55-a091-bc975ba824e7",
                            Published = true,
                            Route = "/about",
                            SiteId = 1L,
                            SortOrder = 0L,
                            Title = "About"
                        },
                        new
                        {
                            Id = 5L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 940, DateTimeKind.Local).AddTicks(8536),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 940, DateTimeKind.Local).AddTicks(8544),
                            DateScheduledPublish = new DateTime(2021, 3, 29, 22, 18, 58, 940, DateTimeKind.Local).AddTicks(8552),
                            Disabled = false,
                            Draft = false,
                            Level = 1,
                            NavigationTitle = "Contact",
                            PageIdentifier = "9455e0e8-cbde-40c2-923a-f32bd0cec2b1",
                            PageTypeId = "StandardPage",
                            ParentPageIdentifier = "f8baa4da-57dc-4e55-a091-bc975ba824e7",
                            Published = true,
                            Route = "/contact",
                            SiteId = 1L,
                            SortOrder = 2L,
                            Title = "Contact"
                        },
                        new
                        {
                            Id = 6L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 940, DateTimeKind.Local).AddTicks(8563),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 940, DateTimeKind.Local).AddTicks(8571),
                            DateScheduledPublish = new DateTime(2021, 3, 26, 22, 18, 58, 940, DateTimeKind.Local).AddTicks(8579),
                            Disabled = false,
                            Draft = false,
                            Level = 0,
                            NavigationTitle = "Home",
                            PageIdentifier = "f8baa4da-57dc-4e55-a091-bc975ba824e7",
                            PageTypeId = "Root",
                            Published = true,
                            Route = "/",
                            SiteId = 1L,
                            SortOrder = 0L,
                            Title = "Home"
                        },
                        new
                        {
                            Id = 7L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 940, DateTimeKind.Local).AddTicks(8599),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 940, DateTimeKind.Local).AddTicks(8607),
                            DateScheduledExpiry = new DateTime(2021, 3, 28, 22, 18, 58, 940, DateTimeKind.Local).AddTicks(8623),
                            DateScheduledPublish = new DateTime(2021, 3, 27, 22, 18, 58, 940, DateTimeKind.Local).AddTicks(8615),
                            Disabled = false,
                            Draft = false,
                            Level = 0,
                            NavigationTitle = "Home",
                            PageIdentifier = "f8baa4da-57dc-4e55-a091-bc975ba824e7",
                            PageTypeId = "Root",
                            Published = true,
                            Route = "/",
                            SiteId = 1L,
                            SortOrder = 0L,
                            Title = "Home"
                        },
                        new
                        {
                            Id = 8L,
                            Binned = false,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 940, DateTimeKind.Local).AddTicks(8635),
                            DateModified = new DateTime(2021, 3, 29, 22, 18, 58, 940, DateTimeKind.Local).AddTicks(8643),
                            Disabled = false,
                            Draft = true,
                            Level = 0,
                            NavigationTitle = "Home",
                            PageIdentifier = "f8baa4da-57dc-4e55-a091-bc975ba824e7",
                            PageTypeId = "Root",
                            Published = false,
                            Route = "/",
                            SiteId = 1L,
                            SortOrder = 0L,
                            Title = "Home"
                        });
                });

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.PageBlock", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BlockId")
                        .HasColumnType("bigint")
                        .HasColumnName("BlockId");

                    b.Property<long>("PageId")
                        .HasColumnType("bigint")
                        .HasColumnName("PageId");

                    b.Property<long>("ParentId")
                        .HasColumnType("bigint")
                        .HasColumnName("ParentId");

                    b.Property<long>("SortOrder")
                        .HasColumnType("bigint")
                        .HasColumnName("SortOrder");

                    b.HasKey("Id");

                    b.ToTable("PageBlocks");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BlockId = 1L,
                            PageId = 1L,
                            ParentId = 0L,
                            SortOrder = 0L
                        });
                });

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.PageField", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DataType");

                    b.Property<long>("FieldId")
                        .HasColumnType("bigint")
                        .HasColumnName("FieldId");

                    b.Property<long>("PageBlockId")
                        .HasColumnType("bigint")
                        .HasColumnName("PageBlockId");

                    b.Property<long>("SortOrder")
                        .HasColumnType("bigint")
                        .HasColumnName("SortOrder");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Title");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Value");

                    b.HasKey("Id");

                    b.ToTable("PageFields");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DataType = "int",
                            FieldId = 1L,
                            PageBlockId = 1L,
                            SortOrder = 0L,
                            Title = "Number of Columns",
                            Value = "3"
                        });
                });

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.PageType", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Id");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Body");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateCreated");

                    b.HasKey("Id");

                    b.ToTable("PageTypes");

                    b.HasData(
                        new
                        {
                            Id = "Root",
                            Body = "{\"useBlocks\": true, \"title\": \"Homepage\"}",
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 892, DateTimeKind.Local).AddTicks(2821)
                        },
                        new
                        {
                            Id = "StandardPage",
                            Body = "{\"useBlocks\": true, \"title\": \"Standard Page\"}",
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 905, DateTimeKind.Local).AddTicks(821)
                        },
                        new
                        {
                            Id = "ProductList",
                            Body = "{\"useBlocks\": true, \"title\": \"Product List\"}",
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 905, DateTimeKind.Local).AddTicks(970)
                        },
                        new
                        {
                            Id = "ProductDetail",
                            Body = "{\"useBlocks\": true, \"title\": \"ProductDetail\"}",
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 905, DateTimeKind.Local).AddTicks(984)
                        },
                        new
                        {
                            Id = "EventList",
                            Body = "{\"useBlocks\": true, \"title\": \"Event List\"}",
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 905, DateTimeKind.Local).AddTicks(993)
                        },
                        new
                        {
                            Id = "EventDetail",
                            Body = "{\"useBlocks\": true, \"title\": \"Event Detail\"}",
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 905, DateTimeKind.Local).AddTicks(1001)
                        },
                        new
                        {
                            Id = "ArticleList",
                            Body = "{\"useBlocks\": true, \"title\": \"Article List\"}",
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 905, DateTimeKind.Local).AddTicks(1010)
                        },
                        new
                        {
                            Id = "ArticleDetail",
                            Body = "{\"useBlocks\": true, \"title\": \"Article Detail\"}",
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 905, DateTimeKind.Local).AddTicks(1019)
                        },
                        new
                        {
                            Id = "FeatureLanding",
                            Body = "{\"useBlocks\": true, \"title\": \"Feature Landing\"}",
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 905, DateTimeKind.Local).AddTicks(1027)
                        },
                        new
                        {
                            Id = "Error",
                            Body = "{\"useBlocks\": true, \"title\": \"Error\"}",
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 905, DateTimeKind.Local).AddTicks(1038)
                        },
                        new
                        {
                            Id = "Search",
                            Body = "{\"useBlocks\": true, \"title\": \"Search\"}",
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 905, DateTimeKind.Local).AddTicks(1047)
                        },
                        new
                        {
                            Id = "SearchResults",
                            Body = "{\"useBlocks\": true, \"title\": \"Search Results\"}",
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 905, DateTimeKind.Local).AddTicks(1057)
                        },
                        new
                        {
                            Id = "Member",
                            Body = "{\"useBlocks\": true, \"title\": \"Member\"}",
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 905, DateTimeKind.Local).AddTicks(1066)
                        },
                        new
                        {
                            Id = "Transaction",
                            Body = "{\"useBlocks\": true, \"title\": \"Transaction\"}",
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 905, DateTimeKind.Local).AddTicks(1075)
                        });
                });

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.Site", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Culture")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Culture");

                    b.Property<string>("DomainName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("DomainName");

                    b.Property<string>("Protocol")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Protocol");

                    b.HasKey("Id");

                    b.ToTable("Sites");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Culture = "en-GB",
                            DomainName = "superjack.co.uk",
                            Protocol = "https"
                        });
                });

            modelBuilder.Entity("Superjack.MultiSites.Api.DataAccess.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2")
                        .HasColumnName("DateCreated");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FirstName");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordHash");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)")
                        .HasColumnName("PasswordSalt");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Status");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Surname");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            DateCreated = new DateTime(2021, 3, 29, 22, 18, 58, 933, DateTimeKind.Local).AddTicks(7317),
                            FirstName = "Stef",
                            PasswordHash = new byte[] { 128, 195, 86, 129, 189, 56, 47, 228, 124, 241, 46, 224, 203, 197, 183, 132, 109, 54, 96, 125, 213, 209, 92, 110, 29, 99, 223, 46, 162, 106, 98, 171, 94, 9, 166, 250, 127, 103, 241, 97, 196, 247, 21, 229, 234, 61, 72, 170, 184, 21, 41, 237, 216, 30, 42, 48, 177, 154, 92, 106, 155, 185, 132, 130 },
                            PasswordSalt = new byte[] { 145, 179, 67, 188, 159, 39, 127, 16, 36, 239, 10, 96, 145, 244, 241, 147, 166, 194, 110, 140, 221, 223, 149, 217, 248, 55, 35, 91, 219, 212, 203, 243, 253, 55, 235, 22, 150, 224, 167, 194, 179, 226, 22, 220, 44, 13, 177, 145, 6, 56, 239, 130, 34, 112, 121, 134, 129, 234, 144, 23, 23, 76, 50, 143, 52, 233, 206, 147, 132, 111, 1, 88, 176, 177, 72, 216, 164, 12, 125, 242, 129, 150, 177, 166, 13, 90, 2, 15, 201, 228, 24, 134, 237, 20, 103, 231, 227, 9, 131, 131, 127, 48, 213, 167, 166, 222, 34, 171, 40, 82, 68, 52, 48, 123, 88, 252, 113, 178, 118, 243, 140, 233, 220, 110, 184, 193, 24, 186 },
                            Status = "Active",
                            Surname = "Cunning",
                            Username = "services@superjack.co.uk"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
